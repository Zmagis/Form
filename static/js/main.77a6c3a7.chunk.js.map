{"version":3,"sources":["images/network.mp4","components/Home/index.js","components/Form/FormField.js","components/Form/ColorPicker.js","components/Form/index.js","util.js","components/Spinner.js","components/Questions/index.js","components/Nav/DrawerToggle.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","className","src","video","autoPlay","loop","muted","playsInline","to","FormField","id","formData","change","showlabel","config","label","formTemplate","element","value","onChange","event","options","map","item","key","renderTemplate","validation","valid","validationMessage","ColorPicker","style","marginBottom","padding","color","onChangeComplete","handleChangeComplete","Form","useState","language","name","type","required","question","placeholder","email","nickname","setFormData","error","setError","success","setSuccess","background","setBackground","updateForm","newFormData","newElement","target","validData","test","messageOne","trim","messge","validate","form","hex","onClick","preventDefault","dataToSubmit","formIsValid","axios","post","submitHandler","Spinner","Questions","questions","setQuestions","useEffect","get","then","response","questionsArray","data","unshift","catch","alert","grid","i","fontWeight","borderBottom","minHeight","textAlign","fontSize","paddingTop","length","drawerToggle","click","Nav","DrawerToggle","show","left","delay","duration","exact","clickLink","App","setShow","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.77a6c3a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/network.0b0d8edc.mp4\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport video from \"../../images/network.mp4\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div className=\"home-screen\">\r\n      <div className=\"video-box\">\r\n        <video\r\n          className=\"video\"\r\n          src={video}\r\n          autoPlay={true}\r\n          loop={true}\r\n          muted={true}\r\n          playsInline={true}\r\n        ></video>\r\n      </div>\r\n\r\n      <div className=\"overlay\"></div>\r\n      <div className=\"home-content\">\r\n        <h1>Deep/Random Questionary</h1>\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </p>\r\n        <NavLink className=\"start-button\" to=\"/form\">\r\n          Let's start\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst FormField = ({ id, formData, change }) => {\r\n  const showError = () => {\r\n    let errorMessage = (\r\n      <div className=\"error_label\">\r\n        {formData.validation && !formData.valid\r\n          ? formData.validationMessage\r\n          : null}\r\n      </div>\r\n    );\r\n    return errorMessage;\r\n  };\r\n\r\n  const renderTemplate = () => {\r\n    let formTemplate = null;\r\n\r\n    switch (formData.element) {\r\n      case \"input\":\r\n        formTemplate = (\r\n          <input\r\n            {...formData.config}\r\n            value={formData.value}\r\n            onChange={event => change({ event, id })}\r\n          />\r\n        );\r\n        break;\r\n      case \"select\":\r\n        formTemplate = (\r\n          <select\r\n            {...formData.config}\r\n            value={formData.value}\r\n            onChange={event => change({ event, id })}\r\n          >\r\n            <option value=\"\">- - - || - - -</option>\r\n            {formData.config.options.map(item => (\r\n              <option key={item.key} value={item.key}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        );\r\n        break;\r\n      case \"textarea\":\r\n        formTemplate = (\r\n          <textarea\r\n            {...formData.config}\r\n            value={formData.value}\r\n            onChange={event => change({ event, id })}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        formTemplate = null;\r\n    }\r\n\r\n    return formTemplate;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {formData.showlabel ? (\r\n        <div className=\"label\">{formData.config.label}</div>\r\n      ) : null}\r\n      {renderTemplate()}\r\n      {showError()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import React from \"react\";\r\nimport { SliderPicker } from \"react-color\";\r\n\r\nconst ColorPicker = props => (\r\n  <div style={{ marginBottom: \"20px\" }}>\r\n    <div className=\"label\" style={{ marginBottom: \"10px\" }}>\r\n      Pick your favorite color\r\n    </div>\r\n    <div style={{ padding: \"10px 0px\" }}>\r\n      <SliderPicker\r\n        color={props.color}\r\n        onChangeComplete={props.handleChangeComplete}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ColorPicker;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { validate } from \"../../util\";\r\nimport FormField from \"./FormField\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport axios from \"axios\";\r\n\r\nconst Form = props => {\r\n  const [formData, setFormData] = useState({\r\n    language: {\r\n      element: \"select\",\r\n      value: \"\",\r\n      config: {\r\n        label: \"Select the most beautiful language\",\r\n        name: \"select_language\",\r\n        type: \"select\",\r\n        options: [\r\n          { key: \"JavaScript\", value: \"JavaScript\" },\r\n          { key: \"Lithuanian\", value: \"Lithuanian\" },\r\n          { key: \"French\", value: \"French\" },\r\n          { key: \"English\", value: \"English\" },\r\n          { key: \"German\", value: \"German\" }\r\n        ]\r\n      },\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      validationMessage: \"\",\r\n      showlabel: true\r\n    },\r\n    question: {\r\n      element: \"textarea\",\r\n      value: \"\",\r\n      config: {\r\n        label: \"Your deep/random question\",\r\n        name: \"question_input\",\r\n        type: \"textarea\",\r\n        placeholder: \"Example: When in your life you felt most alive?\"\r\n      },\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      validationMessage: \"\",\r\n      showlabel: true\r\n    },\r\n    email: {\r\n      element: \"input\",\r\n      value: \"\",\r\n      config: {\r\n        label: \"Enter your email\",\r\n        name: \"email_input\",\r\n        type: \"email\",\r\n        placeholder: \"abc@gmail.com\"\r\n      },\r\n      validation: {\r\n        required: true,\r\n        email: true\r\n      },\r\n      valid: false,\r\n      validationMessage: \"\",\r\n      showlabel: true\r\n    },\r\n    nickname: {\r\n      element: \"input\",\r\n      value: \"\",\r\n      config: {\r\n        label: \"Enter your nickname\",\r\n        name: \"nickname_input\",\r\n        type: \"text\",\r\n        placeholder: \"Name\"\r\n      },\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      validationMessage: \"\",\r\n      showlabel: true\r\n    }\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [background, setBackground] = useState(\"#40b8bf\");\r\n\r\n  const updateForm = element => {\r\n    const newFormData = { ...formData };\r\n    const newElement = { ...newFormData[element.id] };\r\n    newElement.value = element.event.target.value;\r\n\r\n    let validData = validate(newElement);\r\n    newElement.valid = validData[0];\r\n    newElement.validationMessage = validData[1];\r\n\r\n    newFormData[element.id] = newElement;\r\n\r\n    setError(false);\r\n    setFormData(newFormData);\r\n  };\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n    let dataToSubmit = {};\r\n    let formIsValid = true;\r\n\r\n    for (let key in formData) {\r\n      dataToSubmit[key] = formData[key].value;\r\n      formIsValid = formData[key].valid && formIsValid;\r\n    }\r\n\r\n    if (formIsValid) {\r\n      axios.post(`https://form-8987a.firebaseio.com/submits.json`, {\r\n        ...dataToSubmit,\r\n        color: background\r\n      });\r\n      setSuccess(\"submited\");\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleChangeComplete = color => {\r\n    setBackground(color.hex);\r\n  };\r\n\r\n  let form = (\r\n    <>\r\n      <h1>Fill out the Form</h1>\r\n      <form>\r\n        <ColorPicker\r\n          color={background}\r\n          handleChangeComplete={handleChangeComplete}\r\n        />\r\n\r\n        <FormField\r\n          id={\"language\"}\r\n          formData={formData.language}\r\n          change={element => updateForm(element)}\r\n        />\r\n        <FormField\r\n          id={\"question\"}\r\n          formData={formData.question}\r\n          change={element => updateForm(element)}\r\n        />\r\n\r\n        <FormField\r\n          id={\"nickname\"}\r\n          formData={formData.nickname}\r\n          change={element => updateForm(element)}\r\n        />\r\n        <FormField\r\n          id={\"email\"}\r\n          formData={formData.email}\r\n          change={element => updateForm(element)}\r\n        />\r\n\r\n        <div className=\"button-box\">\r\n          <button type=\"submit\" onClick={event => submitHandler(event)}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n\r\n        {error ? <div className=\"error_label\">Something went wrong</div> : null}\r\n        <div className=\"success_label\">{success}</div>\r\n      </form>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      {success === \"submited\" ? <Redirect to=\"/questions\" /> : form}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export const validate = element => {\r\n  let error = [true, \"\"];\r\n\r\n  if (element.validation.email) {\r\n    const valid = /\\S+@\\S+\\.\\S+/.test(element.value);\r\n    const messageOne = `${!valid ? \"Email is not valid\" : \"\"}`;\r\n    error = !valid ? [valid, messageOne] : error;\r\n  }\r\n\r\n  if (element.validation.required) {\r\n    const valid = element.value.trim() !== \"\";\r\n    const messge = `${!valid ? \"this field is required\" : \"\"}`;\r\n    error = !valid ? [valid, messge] : error;\r\n  }\r\n  return error;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Spinner = props => {\r\n  return <div className=\"loader\">Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst Questions = props => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [laoding, setLoading] = useState(false);\r\n\r\n  //   useEffect(()=>{\r\n  // if(questions)\r\n  //   }, [questions])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://form-8987a.firebaseio.com/submits.json\")\r\n      .then(response => {\r\n        const questionsArray = [];\r\n        for (let key in response.data) {\r\n          questionsArray.unshift({\r\n            question: response.data[key].question,\r\n            nickname: response.data[key].nickname,\r\n            color: response.data[key].color\r\n          });\r\n        }\r\n\r\n        setQuestions(questionsArray);\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      });\r\n  }, [questions]);\r\n  let grid = (\r\n    <div className=\"grid\">\r\n      {questions.map((question, i) => (\r\n        <li key={i}>\r\n          <div\r\n            style={{\r\n              color: question.color,\r\n              fontWeight: \"bold\",\r\n              borderBottom: \"2px dotted rgba(75, 78, 85, 0.651)\",\r\n              minHeight: 80,\r\n              textAlign: \"center\",\r\n              fontSize: 24\r\n            }}\r\n          >\r\n            {question.question}\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: question.color,\r\n              textAlign: \"right\",\r\n              paddingTop: 15\r\n            }}\r\n          >\r\n            {question.nickname}\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"questions-container\">\r\n      <h1>Deep/Random Questions</h1>\r\n      {questions.length === 0 ? <Spinner /> : grid}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import React from \"react\";\r\n\r\nconst drawerToggle = props => (\r\n  <div className=\"DrawerToggle\" onClick={props.click}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default drawerToggle;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport DrawerToggle from \"./DrawerToggle\";\r\n\r\nconst Nav = props => {\r\n  return (\r\n    <div className=\"navigation-container\">\r\n      <DrawerToggle click={props.click} />\r\n      {!props.show ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"links\">\r\n          <Fade left delay={100} duration={400}>\r\n            <div className=\"link\">\r\n              <NavLink to=\"/\" exact onClick={props.clickLink}>\r\n                Home\r\n              </NavLink>\r\n            </div>\r\n          </Fade>\r\n          <Fade left delay={400} duration={400}>\r\n            <div className=\"link\" onClick={props.clickLink}>\r\n              <NavLink to=\"/fill-form\">Form</NavLink>\r\n            </div>\r\n          </Fade>\r\n          <Fade left delay={700} duration={400}>\r\n            <div className=\"link\" onClick={props.clickLink}>\r\n              <NavLink to=\"/questions\">Questions</NavLink>\r\n            </div>\r\n          </Fade>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport Form from \"./components/Form\";\nimport Questions from \"./components/Questions\";\nimport Nav from \"./components/Nav\";\n\nconst App = props => {\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => {\n    setShow(!show);\n  };\n  const handleClickLink = () => {\n    setShow(false);\n  };\n  return (\n    <div className=\"App\">\n      <Nav show={show} click={handleClick} clickLink={handleClickLink} />\n      <Switch>\n        <Route path=\"/questions\" component={Questions} />\n        <Route path=\"/fill-form\" component={Form} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/styles.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}